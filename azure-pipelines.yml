# https://aka.ms/yaml
variables:
  IMAGE_NAME: freqtradeorg/freqtrade
jobs:
- job: 'CI'
  strategy:
    matrix:
      linux_Python36:
        imageName: 'ubuntu-latest'
        python.version: '3.6'
      linux_Python37:
        imageName: 'ubuntu-latest'
        python.version: '3.7'
      macOS_Python36:
        imageName: 'macOS-latest'
        python.version: '3.6'
      macOS_Python37:
        imageName: 'macOS-Latest'
        python.version: '3.7'
    # maxParallel: 4

  pool:
    vmImage: $(imageName)

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
      architecture: 'x64'
  - script: |
      cd build_helpers && ./install_ta-lib.sh; cd ..
      export LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH
      pip install --upgrade pytest-random-order numpy
      pip install -r requirements-dev.txt
      pip install -e .
    displayName: 'Install Dependencies'
  - script: |
      export LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH
      pytest --cov=freqtrade --cov-config=.coveragerc freqtrade/tests/
      # coveralls || true
    displayName: 'PyTest'
  - script: |
      export LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH
      cp config.json.example config.json
      python freqtrade --datadir freqtrade/tests/testdata backtesting
    displayName: backtest
  - script: |
      export LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH
      cp config.json.example config.json
      python freqtrade --datadir freqtrade/tests/testdata hyperopt -e 5
    displayName: hyperopt

  - script: flake8 freqtrade scripts
    displayName: flake8

  - script: mypy freqtrade scripts
    displayName: mypy


  # Add additional tasks to run using each Python version in the matrix above

- job: 'deploy'
  dependsOn: CI
  # TODO: this should be a more complex trigger to only build when merging PR's
  condition: succeeded()
  timeoutInMinutes: 0
  strategy:
    matrix:
      linux_Python37:
        imageName: 'ubuntu-latest'
        python.version: '3.7'

  pool:
    vmImage: $(imageName)

  steps:
  - script: build_helpers/publish_docker_az.sh
    displayName: Build docker image
